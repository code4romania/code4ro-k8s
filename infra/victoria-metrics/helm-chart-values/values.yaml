fullnameOverride: "vm-stack"

kube-state-metrics:
  metricLabelsAllowlist:
    - pods=[*]
    - deployments=[app.kubernetes.io/name,app.kubernetes.io/component,app.kubernetes.io/instance]

vmsingle:
  spec:
    retentionPeriod: "1"
    extraArgs:
      maxLabelsPerTimeseries: "40"
    resources:
      requests:
        cpu: 150m
        memory: 1Gi
      limits:
        memory: 2Gi

vmagent:
  spec:
    resources:
      requests:
        cpu: 60m
        memory: 130M
      limits:
        memory: 400M

kubeControllerManager:
  enabled: false
coreDns:
  enabled: false
kubeEtcd:
  enabled: false
kubeScheduler:
  enabled: false
alertmanager:
  spec:
    configSecret: "alertmanager-config"

defaultRules:
  groups:
    general:
      create: false

defaultDashboards:
  annotations:
    argocd.argoproj.io/sync-options: ServerSideApply=true

prometheus-operator-crds:
  enabled: true

grafana:
  sidecar:
    dashboards:
      searchNamespace: ALL
  vmScrape:
    enabled: false
  admin:
    existingSecret: grafana-secret
  envFromSecret: grafana-secret
  persistence:
    enabled: true

  grafana.ini:
    server:
      domain: metrics.code4.ro
      root_url: https://metrics.code4.ro
    users:
      allow_sign_up: false
      allow_org_create: false
    log:
      mode: console
      level: error
    auth.google:
      enabled: true
      client_id: 578670592407-0r9vnq4l6r6ck8jpo1gthohfq520rgt7.apps.googleusercontent.com
      client_secret: ${google-client-secret}
      allowed_domains: code4.ro commitglobal.org

  alerting:
    contactpoints.yaml:
      apiVersion: 1
      contactPoints:
        - orgId: 1
          name: Code4Ro Slack
          receivers:
            - uid: XTCAjgR4z
              type: slack
              settings:
                url: ${slack-webhook}
